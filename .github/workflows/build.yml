name: Build & Analyse
on:
  push:
    branches:
      - production
  pull_request:
    types: [opened, synchronize, reopened]
jobs:
  build:
    name: Build
    runs-on: ubuntu-latest
    env: 
      working-directory: ltploadtest
    if: ${{ github.actor != 'dependabot[bot]' }}
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0  # Shallow clones should be disabled for a better relevancy of analysis
      - name: Set up JDK 11
        uses: actions/setup-java@v1
        with:
          java-version: 11
      - name: Cache SonarCloud packages
        uses: actions/cache@v1
        with:
          path: ~/.sonar/cache
          key: ${{ runner.os }}-sonar
          restore-keys: ${{ runner.os }}-sonar
      - name: Cache Maven packages
        uses: actions/cache@v1
        with:
          path: ~/.m2
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-m2
      - name: maven-settings-xml-action
        uses: whelk-io/maven-settings-xml-action@v17
        with:
          repositories: '[{ "id": "central", "url": "https://apica.jfrog.io/artifactory/default-maven-virtual" , "releases": { "enabled": "true"},"snapshots": {"enabled": "false"}},{ "id": "snapshots", "url": "https://apica.jfrog.io/artifactory/default-maven-virtual" , "releases": {"enabled": "false"},"snapshots": {"enabled": "true"}}]'
          plugin_repositories: '[{ "id": "central", "url": "https://apica.jfrog.io/artifactory/default-maven-virtual" , "releases": { "enabled": "true"},"snapshots": {"enabled": "false"}},{ "id": "snapshots", "url": "https://apica.jfrog.io/artifactory/default-maven-virtual" , "releases": {"enabled": "false"},"snapshots": {"enabled": "true"}}]'
          servers: '[{ "id": "central", "username": "${env.JFROG_USERNAME}", "password": "${env.JFROG_PASSWORD}" },{ "id": "snapshots", "username": "${env.JFROG_USERNAME}", "password": "${env.JFROG_PASSWORD}" }]'
      - name: Build and analyze ltploadtest-server
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}  # Needed to get PR information, if any
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          JFROG_USERNAME: ${{ secrets.JFROG_USERNAME }}
          JFROG_PASSWORD: ${{ secrets.JFROG_PASSWORD }}
        run: mvn -B verify org.sonarsource.scanner.maven:sonar-maven-plugin:sonar
        working-directory: ${{ env.working-directory }}/ltploadtest-server            
      - name: Build and analyze ltploadtest-common
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}  # Needed to get PR information, if any
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          JFROG_USERNAME: ${{ secrets.JFROG_USERNAME }}
          JFROG_PASSWORD: ${{ secrets.JFROG_PASSWORD }}
        run: mvn -B verify org.sonarsource.scanner.maven:sonar-maven-plugin:sonar
        working-directory: ${{ env.working-directory }}/ltploadtest-common
      - name: Build and analyze build
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}  # Needed to get PR information, if any
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          JFROG_USERNAME: ${{ secrets.JFROG_USERNAME }}
          JFROG_PASSWORD: ${{ secrets.JFROG_PASSWORD }}
        run: mvn -B verify org.sonarsource.scanner.maven:sonar-maven-plugin:sonar
        working-directory: ${{ env.working-directory }}/build    
      - name: Build and analyze ltploadtest-agent
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}  # Needed to get PR information, if any
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          JFROG_USERNAME: ${{ secrets.JFROG_USERNAME }}
          JFROG_PASSWORD: ${{ secrets.JFROG_PASSWORD }}
        run: mvn -B verify org.sonarsource.scanner.maven:sonar-maven-plugin:sonar
        working-directory: ${{ env.working-directory }}/ltploadtest-agent
